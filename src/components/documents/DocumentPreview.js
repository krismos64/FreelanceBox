import { jsxs as _jsxs, jsx as _jsx } from "react/jsx-runtime";
import { X } from 'lucide-react';
import { formatDate } from '../../utils/dateUtils';
import { Button } from '../ui/Button';
export const DocumentPreview = ({ document, onClose }) => {
    return (_jsx("div", { className: "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50", children: _jsxs("div", { className: "bg-white dark:bg-gray-800 rounded-lg w-full max-w-4xl max-h-[90vh] overflow-y-auto p-8", children: [_jsxs("div", { className: "flex justify-between items-center mb-6", children: [_jsxs("h2", { className: "text-2xl font-bold text-gray-800 dark:text-white", children: [document.type === 'quote' ? 'Devis' : 'Facture', " ", document.number] }), _jsx(Button, { variant: "secondary", size: "sm", onClick: onClose, children: _jsx(X, { size: 20 }) })] }), _jsxs("div", { className: "grid grid-cols-2 gap-8 mb-8", children: [_jsxs("div", { children: [_jsx("h3", { className: "font-semibold mb-2 text-gray-700 dark:text-gray-300", children: "Informations" }), _jsxs("p", { className: "text-gray-600 dark:text-gray-400", children: ["Date : ", formatDate(document.date)] }), document.type === 'quote' && document.validUntil && (_jsxs("p", { className: "text-gray-600 dark:text-gray-400", children: ["Valable jusqu'au : ", formatDate(document.validUntil)] }))] }), _jsxs("div", { children: [_jsx("h3", { className: "font-semibold mb-2 text-gray-700 dark:text-gray-300", children: "Client" }), _jsx("p", { className: "text-gray-600 dark:text-gray-400", children: document.client.name }), _jsx("p", { className: "text-gray-600 dark:text-gray-400", children: document.client.email }), _jsx("p", { className: "text-gray-600 dark:text-gray-400", children: document.client.phone }), _jsx("p", { className: "text-gray-600 dark:text-gray-400", children: document.client.address }), document.client.siret && _jsxs("p", { className: "text-gray-600 dark:text-gray-400", children: ["SIRET : ", document.client.siret] })] })] }), _jsxs("div", { className: "mb-8", children: [_jsx("h3", { className: "font-semibold mb-4 text-gray-700 dark:text-gray-300", children: "Services" }), _jsx("div", { className: "overflow-x-auto", children: _jsxs("table", { className: "w-full", children: [_jsx("thead", { children: _jsxs("tr", { children: [_jsx("th", { children: "Description" }), _jsx("th", { className: "text-right", children: "Quantit\u00E9" }), _jsx("th", { className: "text-right", children: "Prix unitaire" }), _jsx("th", { className: "text-right", children: "Total" })] }) }), _jsx("tbody", { children: document.items.map((item) => (_jsxs("tr", { children: [_jsx("td", { children: item.description }), _jsx("td", { className: "text-right", children: item.quantity }), _jsxs("td", { className: "text-right", children: [item.unitPrice.toFixed(2), " \u20AC"] }), _jsxs("td", { className: "text-right", children: [item.total.toFixed(2), " \u20AC"] })] }, item.id))) })] }) })] }), _jsx("div", { className: "flex flex-col items-end", children: _jsxs("div", { className: "w-64", children: [_jsxs("div", { className: "flex justify-between py-2", children: [_jsx("span", { className: "text-gray-600 dark:text-gray-400", children: "Total HT" }), _jsxs("span", { className: "font-medium", children: [document.subtotal.toFixed(2), " \u20AC"] })] }), _jsxs("div", { className: "flex justify-between py-2 text-sm text-gray-500 dark:text-gray-400", children: [_jsx("span", { children: "TVA non applicable, art. 293 B du CGI" }), _jsx("span", { children: "0.00 \u20AC" })] }), _jsxs("div", { className: "flex justify-between py-2 font-bold border-t border-gray-200 dark:border-gray-700", children: [_jsx("span", { children: "Total TTC" }), _jsxs("span", { children: [document.total.toFixed(2), " \u20AC"] })] })] }) }), document.notes && (_jsxs("div", { className: "mt-8", children: [_jsx("h3", { className: "font-semibold mb-2 text-gray-700 dark:text-gray-300", children: "Notes" }), _jsx("p", { className: "text-gray-600 dark:text-gray-400", children: document.notes })] }))] }) }));
};
